##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# http://wiki.nginx.org/Pitfalls
# http://wiki.nginx.org/QuickStart
# http://wiki.nginx.org/Configuration
#
# Generally, you will want to move this file somewhere, and start with a clean
# file but keep this around for reference. Or just disable in sites-enabled.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

# Default server configuration
#

# set search paths for pure Lua external libraries (';;' is the default path):
#lua_package_path '/opt/brotli/?.lua;/blah/?.lua;;';


# set search paths for Lua external libraries written in C (can also use ';;'):
#lua_package_cpath '/bar/baz/?.so;/blah/blah/?.so;;';

lua_shared_dict mimes 1m;
init_by_lua_block {
    ngx.shared.mimes:set("lmth", "text/html")
    ngx.shared.mimes:set("gvs", "image/svg+xml")
    ngx.shared.mimes:set("sj", "application/x-javascript")
    ngx.shared.mimes:set("ssc", "text/css")
    ngx.shared.mimes:set("lmx", "text/xml")
}

server {
    listen 8000 default_server;
    listen [::]:8000 default_server;

    # SSL configuration
    #
    # listen 443 ssl default_server;
    # listen [::]:443 ssl default_server;
    #
    # Self signed certs generated by the ssl-cert package
    # Don't use them in a production server!
    #
    # include snippets/snakeoil.conf;

    root /var/www/html;

    # Add index.php to the list if you are using PHP
    index index.html index.htm index.nginx-debian.html;

    server_name _;

    set $index_br index.html;
    set $is_br 0;
    set_by_lua_block $br {
        local ae = ngx.req.get_headers()["Accept-Encoding"]
        if (ae ~= nil and string.find(ae, "br")) then
            ngx.header.content_encoding = "br"
            ngx.var.index_br = "index.html.br"
            ngx.var.is_br = 1
            return ngx.var.uri .. ".br"
        else
            return ngx.var.uri
        end
    }

    location / {
        # First attempt to serve request as file, then
        # as directory, then fall back to displaying a 404.
        index $index_br index.html;
        try_files $br $uri $uri/ =404;

        gzip off;
        rewrite_by_lua_block {
            if (ngx.var.is_br) then
                r = string.reverse(ngx.var.uri)
                s, e = string.find(r, "%.")
                if (s == nil) then
                    ngx.header.content_type = "text/html"
                else
                    -- ngx.say("start/end: ", s, e, r)
                    t = string.sub(r, 1, s-1)
                    ngx.header.content_type = ngx.shared.mimes:get(t)
                end
            end
        }
    }

    # gzip stuff
    gzip_static  on;

    gzip_types image/svg+xml text/css application/javascript application/json;

    # deny access to .htaccess files, if Apache's document root
    # concurs with nginx's one
    #
    #location ~ /\.ht {
    #	deny all;
    #}
}


